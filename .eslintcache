[{"E:\\react-projec-1\\src\\index.js":"1","E:\\react-projec-1\\src\\reportWebVitals.js":"2","E:\\react-projec-1\\src\\maths\\index.js":"3","E:\\react-projec-1\\src\\maths\\components\\HeaderComponent.js":"4"},{"size":508,"mtime":1612538790708,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":273,"mtime":1646732431846,"results":"8","hashOfConfig":"6"},{"size":3540,"mtime":1646732479006,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"tt66mb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"E:\\react-projec-1\\src\\index.js",[],["20","21"],"E:\\react-projec-1\\src\\reportWebVitals.js",[],"E:\\react-projec-1\\src\\maths\\index.js",[],"E:\\react-projec-1\\src\\maths\\components\\HeaderComponent.js",["22","23","24","25","26","27","28"],"import { Button, Dialog, Grid, Table, TableCell, TableHead, TableRow, TextField, Typography } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport './common.css';\nimport { Delete, Edit } from '@material-ui/icons';\nfunction HeaderComponent() {\n  const [text, setText] = useState('');\n  const [listTodo, setListTodo] = useState([]);\n  const [load, setLoad] = useState(0);\n  const [openDiaLog, setOpenDiaLog] = useState(false);\n  const [editContent, setEditContent] = useState('');\n  const [indexContent, setIndexContent] = useState();\n\n  useEffect(() => {\n    setListTodo(listTodo);\n  }, [load]);\n\n  const handClickAddListTodo = () => {\n    const dataFm = {\n      content: text,\n    }\n    const count = listTodo.push(dataFm)\n    setLoad(new Date() * 1)\n\n  }\n\n  const deleteListTodo = (index) => {\n    listTodo.splice(index, 1);\n    setListTodo(listTodo);\n    setLoad(new Date() * 1)\n  };\n\n  const editListTodo = (data, index) => {\n    setOpenDiaLog(true)\n    setEditContent(data)\n    setIndexContent(index)\n  }\n\n  const handClickEditListTodo = () => {\n    listTodo[indexContent].content = editContent;\n    setListTodo(listTodo);\n    setLoad(new Date() * 1)\n    setOpenDiaLog(false)\n  }\n\n  return (\n    <div>\n      <Grid container spacing={8} direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\">\n        <Grid xs={3}>\n        </Grid>\n        <Grid xs={6} style={{ marginTop: 20, display: 'flex' , justifyContent: 'center'}} >\n          <div>\n            <h1>To do List</h1>\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Nội dung\"\n              multiline\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              variant=\"outlined\"\n            />\n            <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handClickAddListTodo} >Add</Button>\n            {Array.isArray(listTodo) && listTodo.length > 0 ? listTodo.map((item, index) =>\n              <div style={{ marginTop: 20, display: 'flex' , justifyContent: 'center', alignItems: 'center'}}>\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  multiline\n                  value={item.content}\n                  variant=\"outlined\"\n                  disabled\n                  \n                />\n                <Edit style={{ cursor: 'pointer' }} onClick={() => editListTodo(item.content, index)} />\n                <Delete style={{ cursor: 'pointer' }} onClick={() => deleteListTodo(index)} />\n              </div>\n            ) : null}\n          </div>\n\n        </Grid>\n        <Grid xs={3}>\n\n\n\n\n\n        </Grid>\n        <Dialog\n          open={openDiaLog}\n          onClose={() => setOpenDiaLog(false)}\n          aria-labelledby=\"customized-dialog-title\"\n          fullWidth\n        >\n          <Grid container style={{ padding: '10px 24px' }}>\n            <Grid xs={12}>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Nội dung\"\n                multiline\n                value={editContent}\n                onChange={(e) => setEditContent(e.target.value)}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid xs={12}>\n              <Button style={{ marginTop: 20 }} color=\"primary\" variant=\"outlined\" onClick={handClickEditListTodo} >Lưu</Button>\n            </Grid>\n\n\n          </Grid>\n\n        </Dialog>\n      </Grid>\n      {/* day la ma jsx */}\n\n\n\n    </div>\n  )\n}\nexport default HeaderComponent;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":32,"nodeType":"35","messageId":"36","endLine":1,"endColumn":37},{"ruleId":"33","severity":1,"message":"37","line":1,"column":39,"nodeType":"35","messageId":"36","endLine":1,"endColumn":48},{"ruleId":"33","severity":1,"message":"38","line":1,"column":50,"nodeType":"35","messageId":"36","endLine":1,"endColumn":59},{"ruleId":"33","severity":1,"message":"39","line":1,"column":61,"nodeType":"35","messageId":"36","endLine":1,"endColumn":69},{"ruleId":"33","severity":1,"message":"40","line":1,"column":82,"nodeType":"35","messageId":"36","endLine":1,"endColumn":92},{"ruleId":"41","severity":1,"message":"42","line":15,"column":6,"nodeType":"43","endLine":15,"endColumn":12,"suggestions":"44"},{"ruleId":"33","severity":1,"message":"45","line":21,"column":11,"nodeType":"35","messageId":"36","endLine":21,"endColumn":16},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listTodo'. Either include it or remove the dependency array. You can also do a functional update 'setListTodo(l => ...)' if you only need 'listTodo' in the 'setListTodo' call.","ArrayExpression",["48"],"'count' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [listTodo, load]",{"range":"51","text":"52"},[618,624],"[listTodo, load]"]